# -*- coding: utf-8 -*-
"""KNearestNeighbour.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KR8JGXgyL99o4uDuyjUpgTjhV-5GzZiA
"""

import numpy as np, matplotlib.pyplot as plt
from collections import Counter

data = np.random.rand(100)
train, test = data[:50], data[50:]
labels = np.where(train <= 0.5, "Class1", "Class2")

def knn(x, k=3):
    nearest = labels[np.argpartition(np.abs(train - x), k)[:k]]
    return Counter(nearest).most_common(1)[0][0]

for k in [1, 2, 3, 4, 5, 20, 30]:
    res = [knn(x, k) for x in test]
    print(f"\nk={k} results:")
    [print(f"x{i+51}: {v:.3f}â†’{l}") for i, (v, l) in enumerate(zip(test, res))]

    plt.figure(figsize=(10, 3))
    for c, l in [('b', 'Class1'), ('r', 'Class2')]:
        plt.scatter(train[labels==l], [0]*sum(labels==l), c=c, marker='o')
        plt.scatter(test[np.array(res)==l], [1]*sum(np.array(res)==l), c=c, marker='x')
    plt.yticks([0,1], ['Train','Test'])
    plt.title(f'k={k} Classification')
    plt.show()